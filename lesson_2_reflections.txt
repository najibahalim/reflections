What happens when you initialize a repository? Why do you need to do it?

When we initialize a repository, a .git file is created in it and the directory is transformed to a git repository 


How is the staging area different from the working directory and the repository?

What value do you think it offers?

As we can commit more than one files in a repository at once, Staging area is used to bind them together and commit. 

How can you use the staging area to make sure you have one commit per logical
change?

Using the staging area it is possible to add one file at a time to staging area and commit them.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches can help in keeping history organized when we need to add some experimental features in the code or make a version in another language.
Branches help as they help us develope code in the desired direction and mearge later. 


How do the diagrams help you visualize the branch structure?

Diagrams enable us to potray all the current branches and their checkout points thus enabling us to visulize the branch structure.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Merging merges two branches producing the combined version of the features in the two branches. Diagram helps in the proper visulisation of the different branches in our pgm and the different commits in these branches enabling better understanding.

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?

In Manual Merging we always can predict the results as we are the one who take final decision on which code to keep and which one to dicard. Automatic merging may lead to unexpected results. 